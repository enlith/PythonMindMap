Python
	Help - information about function and statement
		python -c "help(help)"
		python -c "help('print')"
	Basic
		Comment : text right to symbol #
		Literal Constants : 2, 'This is a string'
		Numbers : integers and floats
		Strings : Strings are Immutable
			Single Quote
			Double Quotes : Roughly same way as in single quote 
			Triple Quotes : Specify multi-lines by using """ or '''
			Print format : python -c 'print "{name:_^11} is {age:.2f}".format(name="Bob",age=18)'
			Print format : python -c 'print "{0:8b}".format(16),"{0:8o}".format(16),"{0:8x}".format(16)' -> 10000  20  10
			Raw string : r"New raw string \n" or R"New RAW string\n"
		Variable
			Identifier Naming : [A-Za-z_]{1}[A-Za-z_0-9]*
		Operations
			+ : 1 + 2 -> 3; 'a' + 'b' -> 'ab'
			- : 2 - 1 -> 1; 'a' - 'b' -> TypeError: unsupported operand
			* : 1 * 2 -> 2; 'a' * 3 -> 'aaa'; 3 * 'a' -> 'aaa'
			/ : 1 / 2 -> 0; 1.0/2 -> 0.5; 
			**: 2 ** 3 -> 2 * 2 * 2 -> 8
			% : 5 % 2 -> 1
			<<: binary left shift, 2 << 2 -> 8
			>>: binary right shift, 9 >> 2 -> 2 # 1001 >> 2 -> 10
			& : bit-wise AND, 5 & 3 -> 1 # 101 & 011 -> 001
			| : bit-wise OR, 5 | 3 -> 7 # 101 | 011 -> 111
			^ : bit-wise XOR, 0b101 ^ 0b011 -> 0b110
			~ : bit-wise invert, ~5 -> -6 # x -> -(x+1)
			>,<,>=,<=,==,not,and,or : normal operation like other lanuage
			Lambda Expression : f = lambda x, y : x + y;print f(1,1) -> 2
		Control
			if <condition> : ... elif <condition> : ... else : ...
			while <condition> : ... else : ...
			for i in range(1,9) : ... else : ...
			break : break loop
			continue : jump to next loop
		Function
			format : def <functionname>(parameter1, ... )
			parameter : def allformat( part1, part2=1, *numbers, **keywords)
